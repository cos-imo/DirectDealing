Table User:
    User_id (Primary Key)
    First_Name
    Name
    Mail
    Password
    Photo_profil
    Wallet

Table Event:
    Event_id (Primary Key)
    type
    Name
    preteur_id (Foreign Key -> User)
    acheteur_id (Foreign Key -> User)
    Recurrence
    Localisation
    Duree
    Couleur
    Prix_id (Foreign Key -> Florain)

Table Avis:
    Avis_id (Primary Key)
    Note
    Commentaire
    Auteur_id (Foreign Key -> User)
    Receveur_id (Foreign Key -> User)
    Date

Table Message:
    Message_id (Primary Key)
    Event_lie_id (Foreign Key -> Event)
    Sender_id (Foreign Key -> User)
    Receiver_id (Foreign Key -> User)
    Contenu


--------------- CODE POUR CREATION DE LA BASE ---------------

-- USER --

CREATE TABLE User (
    User_id INTEGER PRIMARY KEY AUTOINCREMENT,
    First_Name TEXT NOT NULL,
    Name TEXT NOT NULL,
    Mail TEXT NOT NULL,
    Password TEXT NOT NULL,
    Photo_profil BLOB DEFAULT "/Users/gabrieldecave/Telecom/2A/PCD/CodingWeek/codingweek-24/src/main/resources/eu/telecomnancy/labfx/images/avatar_default.avif", -- Assumption: Image data is stored as BLOB
    Wallet INTEGER DEFAULT 0
);

-- EVENT --

CREATE TABLE Event (
    Event_id INTEGER PRIMARY KEY AUTOINCREMENT,
    type INTEGER NOT NULL, -- Assumption: 0 = service, 1 = prêt
    Name TEXT NOT NULL,
    preteur_id INTEGER REFERENCES User(User_id) NOT NULL,
    acheteur_id INTEGER REFERENCES User(User_id),
    Recurrence INTEGER NOT NULL, -- Assumption: 0 = non, 1 = quotidien, 2 = mensuel, 3 = hebdomadaire
    Localisation TEXT,
    Duree REAL, -- en minute
    Couleur INTEGER DEFAULT 0, -- Assumption: 0 = Blanc(rien), 1 = Couleur1(prêteur dispo), 2 = Couleur2(prêteur avec créneau réservé), 3 = Couleur3(client avec créneau réservé)
    Prix INTEGER NOT NULL
);

-- AVIS --

CREATE TABLE Avis (
    Avis_id INTEGER PRIMARY KEY AUTOINCREMENT,
    Note INTEGER NOT NULL,
    Commentaire TEXT,
    Auteur_id INTEGER REFERENCES User(User_id) NOT NULL,
    Receveur_id INTEGER REFERENCES User(User_id) NOT NULL,
    Date DATE DEFAULT CURRENT_TIMESTAMP
);

-- MESSAGE -- 

CREATE TABLE Message (
    Message_id INTEGER PRIMARY KEY AUTOINCREMENT,
    Event_lie_id INTEGER REFERENCES Event(Event_id) NOT NULL,
    Sender_id INTEGER REFERENCES User(User_id) NOT NULL,
    Receiver_id INTEGER REFERENCES User(User_id) NOT NULL,
    Contenu TEXT NOT NULL
);

--------------- CODE POUR RESET LA BASE ---------------

DROP TABLE IF EXISTS User;
DROP TABLE IF EXISTS Event;
DROP TABLE IF EXISTS Avis;
DROP TABLE IF EXISTS Message;
